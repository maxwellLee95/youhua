<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Order extends \App\Entity\Order implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'consignee_name', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'consignee_concat', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'consignee_address', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'order_number', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'status', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'deleted_at', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'consumer', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'total', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'total_excl', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'paid_at', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'sent_at', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'took_at', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'orderBill', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'created_at', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'updated_at'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'consignee_name', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'consignee_concat', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'consignee_address', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'order_number', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'status', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'deleted_at', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'consumer', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'total', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'total_excl', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'paid_at', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'sent_at', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'took_at', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'orderBill', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'created_at', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'updated_at'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Order $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalBillByReturn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalBillByReturn', []);

        return parent::getTotalBillByReturn();
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalBillByAppend()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalBillByAppend', []);

        return parent::getTotalBillByAppend();
    }

    /**
     * {@inheritDoc}
     */
    public function getConsigneeName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConsigneeName', []);

        return parent::getConsigneeName();
    }

    /**
     * {@inheritDoc}
     */
    public function setConsigneeName(string $consignee_name): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConsigneeName', [$consignee_name]);

        return parent::setConsigneeName($consignee_name);
    }

    /**
     * {@inheritDoc}
     */
    public function getConsigneeConcat(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConsigneeConcat', []);

        return parent::getConsigneeConcat();
    }

    /**
     * {@inheritDoc}
     */
    public function setConsigneeConcat(string $consignee_concat): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConsigneeConcat', [$consignee_concat]);

        return parent::setConsigneeConcat($consignee_concat);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderNumber(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderNumber', []);

        return parent::getOrderNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrderNumber(string $order_number): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrderNumber', [$order_number]);

        return parent::setOrderNumber($order_number);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus(string $status): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeletedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeletedAt', []);

        return parent::getDeletedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeletedAt(\DateTimeInterface $deleted_at): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeletedAt', [$deleted_at]);

        return parent::setDeletedAt($deleted_at);
    }

    /**
     * {@inheritDoc}
     */
    public function getConsumer(): ?\App\Entity\Consumer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConsumer', []);

        return parent::getConsumer();
    }

    /**
     * {@inheritDoc}
     */
    public function setConsumer(?\App\Entity\Consumer $consumer): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConsumer', [$consumer]);

        return parent::setConsumer($consumer);
    }

    /**
     * {@inheritDoc}
     */
    public function getConsigneeAddress(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConsigneeAddress', []);

        return parent::getConsigneeAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setConsigneeAddress(string $consignee_address): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConsigneeAddress', [$consignee_address]);

        return parent::setConsigneeAddress($consignee_address);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotal(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotal', []);

        return parent::getTotal();
    }

    /**
     * {@inheritDoc}
     */
    public function setTotal(float $total): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTotal', [$total]);

        return parent::setTotal($total);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalExcl(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalExcl', []);

        return parent::getTotalExcl();
    }

    /**
     * {@inheritDoc}
     */
    public function setTotalExcl(float $total_excl): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTotalExcl', [$total_excl]);

        return parent::setTotalExcl($total_excl);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalProfit(): float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalProfit', []);

        return parent::getTotalProfit();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getPaidAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaidAt', []);

        return parent::getPaidAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaidAt(?\DateTimeInterface $paid_at): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaidAt', [$paid_at]);

        return parent::setPaidAt($paid_at);
    }

    /**
     * {@inheritDoc}
     */
    public function getSentAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSentAt', []);

        return parent::getSentAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setSentAt(?\DateTimeInterface $sent_at): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSentAt', [$sent_at]);

        return parent::setSentAt($sent_at);
    }

    /**
     * {@inheritDoc}
     */
    public function getTookAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTookAt', []);

        return parent::getTookAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setTookAt(?\DateTimeInterface $took_at): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTookAt', [$took_at]);

        return parent::setTookAt($took_at);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderBill(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderBill', []);

        return parent::getOrderBill();
    }

    /**
     * {@inheritDoc}
     */
    public function addOrderBill(\App\Entity\OrderBill $orderBill): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOrderBill', [$orderBill]);

        return parent::addOrderBill($orderBill);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOrderBill(\App\Entity\OrderBill $orderBill): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOrderBill', [$orderBill]);

        return parent::removeOrderBill($orderBill);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(?\DateTimeInterface $created_at): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$created_at]);

        return parent::setCreatedAt($created_at);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTimeInterface $updated_at): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updated_at]);

        return parent::setUpdatedAt($updated_at);
    }

}
